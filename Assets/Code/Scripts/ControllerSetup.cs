//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Code/Scripts/ControllerSetup.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @ControllerSetup: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @ControllerSetup()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""ControllerSetup"",
    ""maps"": [
        {
            ""name"": ""Hoist"",
            ""id"": ""e97d2f46-8f73-48c7-bfc2-50388d50f353"",
            ""actions"": [
                {
                    ""name"": ""Cross"",
                    ""type"": ""Value"",
                    ""id"": ""256ec4a3-3938-4418-a23a-43b1f1f58cb1"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Vertical"",
                    ""type"": ""Value"",
                    ""id"": ""8b925241-c573-442b-b69d-e221b6e58a05"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Switcher"",
                    ""type"": ""Button"",
                    ""id"": ""bc6665a7-284b-4e3f-8d93-dd100f04aa4e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Malfunction"",
                    ""type"": ""Button"",
                    ""id"": ""00a588de-71fa-4ac8-b21e-812f2df90d79"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Reset"",
                    ""type"": ""Button"",
                    ""id"": ""7f5e7415-a909-41f7-8acc-9938a83b89b4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""fd4c673a-30bb-44a3-be10-082bcbd593ac"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cross"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4f05b7f8-126b-4339-98ef-26fa5e9c5b6b"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Vertical"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c06a7e6a-cafb-436c-9924-9d2a4eeec15a"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Switcher"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f16fb53c-4f95-4cbe-8005-96f31beba7e2"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Malfunction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2d7202ac-2648-4abe-8dbc-90694b54fdf3"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Reset"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Controls"",
            ""id"": ""50e1b1f3-47b4-4aff-aafb-7afb0332bd55"",
            ""actions"": [
                {
                    ""name"": ""Joystick 1"",
                    ""type"": ""Value"",
                    ""id"": ""92037f57-461b-466e-ba10-28e0a2266caf"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Joystick 2"",
                    ""type"": ""Value"",
                    ""id"": ""765eb5ba-f369-40a4-8e04-c5cc0bfaf29c"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Rotary 1"",
                    ""type"": ""Button"",
                    ""id"": ""faf6dbfd-725f-4c91-a93e-2bec38175bd3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Rotary 2"",
                    ""type"": ""Button"",
                    ""id"": ""5c500264-4017-4c70-a01c-b632dca9cbb3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Rotary 3"",
                    ""type"": ""Button"",
                    ""id"": ""f659587f-8bd2-412b-b96d-4df1609536b4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Rotary 4"",
                    ""type"": ""Button"",
                    ""id"": ""b81950ac-51ac-4041-8ad5-5e3d54e8a87f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""[Left] PushButton 1"",
                    ""type"": ""Button"",
                    ""id"": ""8fedca32-059e-4efd-bc9e-3b3fe52c85f9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""[Left] PushButton 2"",
                    ""type"": ""Button"",
                    ""id"": ""93d62822-7f62-4f29-bd53-9228798ded89"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""[Left] PushButton 3"",
                    ""type"": ""Button"",
                    ""id"": ""706c5300-7bf2-4b5a-8bc3-1f293b6b6b23"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""[Left] PushButton 4"",
                    ""type"": ""Button"",
                    ""id"": ""f7f74484-d71f-4b74-95ac-bbff2ac0691a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DownShift"",
                    ""type"": ""Button"",
                    ""id"": ""01f90bc6-7116-49e3-a3f2-bd02432d4d65"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UpShift"",
                    ""type"": ""Button"",
                    ""id"": ""9b795d01-79bb-4e34-b3e4-5ff45f19ce2b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Joystick1Button1"",
                    ""type"": ""Button"",
                    ""id"": ""be5ab2cb-fff6-4751-8fa0-29f36c358428"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Joystick1Button2"",
                    ""type"": ""Button"",
                    ""id"": ""b622d21f-19df-43fc-9788-c3ec331efaf5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Joystick2Button1"",
                    ""type"": ""Button"",
                    ""id"": ""d2f299ce-c632-4c94-a07c-997182b0a811"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Joystick2Button2"",
                    ""type"": ""Button"",
                    ""id"": ""27483d3a-bc78-4648-8256-d1f7f4e0b269"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""[Right] PushButton 1"",
                    ""type"": ""Button"",
                    ""id"": ""c117503a-6500-48fa-ba69-0693fa1ebaf6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""[Right] PushButton 2"",
                    ""type"": ""Button"",
                    ""id"": ""e798096a-f2c0-4717-be99-ce9ec9eeb37e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""[Right] PushButton 3"",
                    ""type"": ""Button"",
                    ""id"": ""9f72b994-1b78-40de-a3ec-a93c39071ce1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""[Right] PushButton 4"",
                    ""type"": ""Button"",
                    ""id"": ""b785038e-b509-48e2-a356-7bc61150e091"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""[Right] PushButton 5"",
                    ""type"": ""Button"",
                    ""id"": ""c31aae26-549d-4794-a479-51ec674f5099"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""[Right] PushButton 6"",
                    ""type"": ""Button"",
                    ""id"": ""0d41dd62-c4f0-446e-bbad-d87fc79d9c51"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""[Right] PushButton 7"",
                    ""type"": ""Button"",
                    ""id"": ""d59a490d-9abe-4e42-8933-940a333706aa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""[Right] PushButton 8"",
                    ""type"": ""Button"",
                    ""id"": ""0e2d1bdf-6c36-4640-924d-a819d0954e88"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""8dd0cdb3-5e6f-426e-9e99-a30c9e1a8636"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Joystick 1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ba8920e3-5af7-4df6-983c-faf27a856992"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotary 1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2df802ee-a2de-4776-a3b3-3ea83dba47d6"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": ""Hold(duration=0.2)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""[Left] PushButton 1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6d0d5d87-e29d-4c81-9f18-5e5edd4ded0a"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DownShift"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c5d3b191-76ca-458c-89cb-8882a7d923ab"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Joystick 2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""43db3953-7fd4-4dbd-891a-2f10d4b43721"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotary 2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b9a73154-73ef-4e5d-8754-7dd335c935bc"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotary 3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9eb4a305-bca8-4cca-b264-8e4314743e40"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotary 4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""60484c5d-1c45-4f52-aa4b-9ccf03dffc2c"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UpShift"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1bb6e82c-3e23-40c1-932d-5adc3b84b0e1"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": ""Hold(duration=0.2)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""[Left] PushButton 2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9b663c45-bdc2-4acb-917f-17f4f6b1a9c4"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": ""Hold(duration=0.2)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""[Left] PushButton 3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c8a228d3-cae8-4294-a4eb-53425661962d"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": ""Hold(duration=0.2)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""[Left] PushButton 4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""48274621-09b2-4421-b860-88431b56468c"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Joystick1Button1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""874d3df2-d48a-40f7-8a11-ed1f6b7589ba"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Joystick1Button2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2aab6c5e-ab54-4dff-9b93-f4cb90f7ee57"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Joystick2Button1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""71ac407e-e9a0-4505-95e7-2474342c38ff"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Joystick2Button2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""30b5a81f-ef60-45ff-8488-a55f04377b80"",
                    ""path"": ""<Keyboard>/9"",
                    ""interactions"": ""Hold(duration=0.2)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""[Right] PushButton 1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""df7b86e3-2537-4526-b4aa-c746e64398e5"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": ""Hold(duration=0.2)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""[Right] PushButton 2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f752902e-b30c-4ccb-8c96-e57585d861f4"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": ""Hold(duration=0.2)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""[Right] PushButton 3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e84c50a6-60f5-4c16-aca7-b8d37ef86a21"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": ""Hold(duration=0.2)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""[Right] PushButton 4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""61fc51da-a8ce-46ab-9cff-aec8b8d11472"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": ""Hold(duration=0.2)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""[Right] PushButton 5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b012ccfc-f01f-41cc-a763-3861de4c10f9"",
                    ""path"": ""<Keyboard>/6"",
                    ""interactions"": ""Hold(duration=0.2)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""[Right] PushButton 6"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fa9ca8cd-ca40-4e7a-8ebf-37db2ef92010"",
                    ""path"": ""<Keyboard>/7"",
                    ""interactions"": ""Hold(duration=0.2)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""[Right] PushButton 7"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5d88909e-cbcf-4762-8ed1-af54bc637e34"",
                    ""path"": ""<Keyboard>/8"",
                    ""interactions"": ""Hold(duration=0.2)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""[Right] PushButton 8"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Discharger"",
            ""id"": ""76c80db8-af1e-446e-8e0b-22ac84741ac1"",
            ""actions"": [
                {
                    ""name"": ""Joystick 1"",
                    ""type"": ""Value"",
                    ""id"": ""39624954-2cdc-4cef-8e37-3ed26475769f"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Joystick 2"",
                    ""type"": ""Value"",
                    ""id"": ""90e6c3ed-d9dc-4639-8a22-b192167f0649"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""3994e858-dc75-41a1-8e5f-151637d5f174"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Joystick 1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c6286aeb-7dd7-4eb6-a8e4-37d1a2b7e88f"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Joystick 2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Hoist
        m_Hoist = asset.FindActionMap("Hoist", throwIfNotFound: true);
        m_Hoist_Cross = m_Hoist.FindAction("Cross", throwIfNotFound: true);
        m_Hoist_Vertical = m_Hoist.FindAction("Vertical", throwIfNotFound: true);
        m_Hoist_Switcher = m_Hoist.FindAction("Switcher", throwIfNotFound: true);
        m_Hoist_Malfunction = m_Hoist.FindAction("Malfunction", throwIfNotFound: true);
        m_Hoist_Reset = m_Hoist.FindAction("Reset", throwIfNotFound: true);
        // Controls
        m_Controls = asset.FindActionMap("Controls", throwIfNotFound: true);
        m_Controls_Joystick1 = m_Controls.FindAction("Joystick 1", throwIfNotFound: true);
        m_Controls_Joystick2 = m_Controls.FindAction("Joystick 2", throwIfNotFound: true);
        m_Controls_Rotary1 = m_Controls.FindAction("Rotary 1", throwIfNotFound: true);
        m_Controls_Rotary2 = m_Controls.FindAction("Rotary 2", throwIfNotFound: true);
        m_Controls_Rotary3 = m_Controls.FindAction("Rotary 3", throwIfNotFound: true);
        m_Controls_Rotary4 = m_Controls.FindAction("Rotary 4", throwIfNotFound: true);
        m_Controls_LeftPushButton1 = m_Controls.FindAction("[Left] PushButton 1", throwIfNotFound: true);
        m_Controls_LeftPushButton2 = m_Controls.FindAction("[Left] PushButton 2", throwIfNotFound: true);
        m_Controls_LeftPushButton3 = m_Controls.FindAction("[Left] PushButton 3", throwIfNotFound: true);
        m_Controls_LeftPushButton4 = m_Controls.FindAction("[Left] PushButton 4", throwIfNotFound: true);
        m_Controls_DownShift = m_Controls.FindAction("DownShift", throwIfNotFound: true);
        m_Controls_UpShift = m_Controls.FindAction("UpShift", throwIfNotFound: true);
        m_Controls_Joystick1Button1 = m_Controls.FindAction("Joystick1Button1", throwIfNotFound: true);
        m_Controls_Joystick1Button2 = m_Controls.FindAction("Joystick1Button2", throwIfNotFound: true);
        m_Controls_Joystick2Button1 = m_Controls.FindAction("Joystick2Button1", throwIfNotFound: true);
        m_Controls_Joystick2Button2 = m_Controls.FindAction("Joystick2Button2", throwIfNotFound: true);
        m_Controls_RightPushButton1 = m_Controls.FindAction("[Right] PushButton 1", throwIfNotFound: true);
        m_Controls_RightPushButton2 = m_Controls.FindAction("[Right] PushButton 2", throwIfNotFound: true);
        m_Controls_RightPushButton3 = m_Controls.FindAction("[Right] PushButton 3", throwIfNotFound: true);
        m_Controls_RightPushButton4 = m_Controls.FindAction("[Right] PushButton 4", throwIfNotFound: true);
        m_Controls_RightPushButton5 = m_Controls.FindAction("[Right] PushButton 5", throwIfNotFound: true);
        m_Controls_RightPushButton6 = m_Controls.FindAction("[Right] PushButton 6", throwIfNotFound: true);
        m_Controls_RightPushButton7 = m_Controls.FindAction("[Right] PushButton 7", throwIfNotFound: true);
        m_Controls_RightPushButton8 = m_Controls.FindAction("[Right] PushButton 8", throwIfNotFound: true);
        // Discharger
        m_Discharger = asset.FindActionMap("Discharger", throwIfNotFound: true);
        m_Discharger_Joystick1 = m_Discharger.FindAction("Joystick 1", throwIfNotFound: true);
        m_Discharger_Joystick2 = m_Discharger.FindAction("Joystick 2", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Hoist
    private readonly InputActionMap m_Hoist;
    private List<IHoistActions> m_HoistActionsCallbackInterfaces = new List<IHoistActions>();
    private readonly InputAction m_Hoist_Cross;
    private readonly InputAction m_Hoist_Vertical;
    private readonly InputAction m_Hoist_Switcher;
    private readonly InputAction m_Hoist_Malfunction;
    private readonly InputAction m_Hoist_Reset;
    public struct HoistActions
    {
        private @ControllerSetup m_Wrapper;
        public HoistActions(@ControllerSetup wrapper) { m_Wrapper = wrapper; }
        public InputAction @Cross => m_Wrapper.m_Hoist_Cross;
        public InputAction @Vertical => m_Wrapper.m_Hoist_Vertical;
        public InputAction @Switcher => m_Wrapper.m_Hoist_Switcher;
        public InputAction @Malfunction => m_Wrapper.m_Hoist_Malfunction;
        public InputAction @Reset => m_Wrapper.m_Hoist_Reset;
        public InputActionMap Get() { return m_Wrapper.m_Hoist; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(HoistActions set) { return set.Get(); }
        public void AddCallbacks(IHoistActions instance)
        {
            if (instance == null || m_Wrapper.m_HoistActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_HoistActionsCallbackInterfaces.Add(instance);
            @Cross.started += instance.OnCross;
            @Cross.performed += instance.OnCross;
            @Cross.canceled += instance.OnCross;
            @Vertical.started += instance.OnVertical;
            @Vertical.performed += instance.OnVertical;
            @Vertical.canceled += instance.OnVertical;
            @Switcher.started += instance.OnSwitcher;
            @Switcher.performed += instance.OnSwitcher;
            @Switcher.canceled += instance.OnSwitcher;
            @Malfunction.started += instance.OnMalfunction;
            @Malfunction.performed += instance.OnMalfunction;
            @Malfunction.canceled += instance.OnMalfunction;
            @Reset.started += instance.OnReset;
            @Reset.performed += instance.OnReset;
            @Reset.canceled += instance.OnReset;
        }

        private void UnregisterCallbacks(IHoistActions instance)
        {
            @Cross.started -= instance.OnCross;
            @Cross.performed -= instance.OnCross;
            @Cross.canceled -= instance.OnCross;
            @Vertical.started -= instance.OnVertical;
            @Vertical.performed -= instance.OnVertical;
            @Vertical.canceled -= instance.OnVertical;
            @Switcher.started -= instance.OnSwitcher;
            @Switcher.performed -= instance.OnSwitcher;
            @Switcher.canceled -= instance.OnSwitcher;
            @Malfunction.started -= instance.OnMalfunction;
            @Malfunction.performed -= instance.OnMalfunction;
            @Malfunction.canceled -= instance.OnMalfunction;
            @Reset.started -= instance.OnReset;
            @Reset.performed -= instance.OnReset;
            @Reset.canceled -= instance.OnReset;
        }

        public void RemoveCallbacks(IHoistActions instance)
        {
            if (m_Wrapper.m_HoistActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IHoistActions instance)
        {
            foreach (var item in m_Wrapper.m_HoistActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_HoistActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public HoistActions @Hoist => new HoistActions(this);

    // Controls
    private readonly InputActionMap m_Controls;
    private List<IControlsActions> m_ControlsActionsCallbackInterfaces = new List<IControlsActions>();
    private readonly InputAction m_Controls_Joystick1;
    private readonly InputAction m_Controls_Joystick2;
    private readonly InputAction m_Controls_Rotary1;
    private readonly InputAction m_Controls_Rotary2;
    private readonly InputAction m_Controls_Rotary3;
    private readonly InputAction m_Controls_Rotary4;
    private readonly InputAction m_Controls_LeftPushButton1;
    private readonly InputAction m_Controls_LeftPushButton2;
    private readonly InputAction m_Controls_LeftPushButton3;
    private readonly InputAction m_Controls_LeftPushButton4;
    private readonly InputAction m_Controls_DownShift;
    private readonly InputAction m_Controls_UpShift;
    private readonly InputAction m_Controls_Joystick1Button1;
    private readonly InputAction m_Controls_Joystick1Button2;
    private readonly InputAction m_Controls_Joystick2Button1;
    private readonly InputAction m_Controls_Joystick2Button2;
    private readonly InputAction m_Controls_RightPushButton1;
    private readonly InputAction m_Controls_RightPushButton2;
    private readonly InputAction m_Controls_RightPushButton3;
    private readonly InputAction m_Controls_RightPushButton4;
    private readonly InputAction m_Controls_RightPushButton5;
    private readonly InputAction m_Controls_RightPushButton6;
    private readonly InputAction m_Controls_RightPushButton7;
    private readonly InputAction m_Controls_RightPushButton8;
    public struct ControlsActions
    {
        private @ControllerSetup m_Wrapper;
        public ControlsActions(@ControllerSetup wrapper) { m_Wrapper = wrapper; }
        public InputAction @Joystick1 => m_Wrapper.m_Controls_Joystick1;
        public InputAction @Joystick2 => m_Wrapper.m_Controls_Joystick2;
        public InputAction @Rotary1 => m_Wrapper.m_Controls_Rotary1;
        public InputAction @Rotary2 => m_Wrapper.m_Controls_Rotary2;
        public InputAction @Rotary3 => m_Wrapper.m_Controls_Rotary3;
        public InputAction @Rotary4 => m_Wrapper.m_Controls_Rotary4;
        public InputAction @LeftPushButton1 => m_Wrapper.m_Controls_LeftPushButton1;
        public InputAction @LeftPushButton2 => m_Wrapper.m_Controls_LeftPushButton2;
        public InputAction @LeftPushButton3 => m_Wrapper.m_Controls_LeftPushButton3;
        public InputAction @LeftPushButton4 => m_Wrapper.m_Controls_LeftPushButton4;
        public InputAction @DownShift => m_Wrapper.m_Controls_DownShift;
        public InputAction @UpShift => m_Wrapper.m_Controls_UpShift;
        public InputAction @Joystick1Button1 => m_Wrapper.m_Controls_Joystick1Button1;
        public InputAction @Joystick1Button2 => m_Wrapper.m_Controls_Joystick1Button2;
        public InputAction @Joystick2Button1 => m_Wrapper.m_Controls_Joystick2Button1;
        public InputAction @Joystick2Button2 => m_Wrapper.m_Controls_Joystick2Button2;
        public InputAction @RightPushButton1 => m_Wrapper.m_Controls_RightPushButton1;
        public InputAction @RightPushButton2 => m_Wrapper.m_Controls_RightPushButton2;
        public InputAction @RightPushButton3 => m_Wrapper.m_Controls_RightPushButton3;
        public InputAction @RightPushButton4 => m_Wrapper.m_Controls_RightPushButton4;
        public InputAction @RightPushButton5 => m_Wrapper.m_Controls_RightPushButton5;
        public InputAction @RightPushButton6 => m_Wrapper.m_Controls_RightPushButton6;
        public InputAction @RightPushButton7 => m_Wrapper.m_Controls_RightPushButton7;
        public InputAction @RightPushButton8 => m_Wrapper.m_Controls_RightPushButton8;
        public InputActionMap Get() { return m_Wrapper.m_Controls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ControlsActions set) { return set.Get(); }
        public void AddCallbacks(IControlsActions instance)
        {
            if (instance == null || m_Wrapper.m_ControlsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_ControlsActionsCallbackInterfaces.Add(instance);
            @Joystick1.started += instance.OnJoystick1;
            @Joystick1.performed += instance.OnJoystick1;
            @Joystick1.canceled += instance.OnJoystick1;
            @Joystick2.started += instance.OnJoystick2;
            @Joystick2.performed += instance.OnJoystick2;
            @Joystick2.canceled += instance.OnJoystick2;
            @Rotary1.started += instance.OnRotary1;
            @Rotary1.performed += instance.OnRotary1;
            @Rotary1.canceled += instance.OnRotary1;
            @Rotary2.started += instance.OnRotary2;
            @Rotary2.performed += instance.OnRotary2;
            @Rotary2.canceled += instance.OnRotary2;
            @Rotary3.started += instance.OnRotary3;
            @Rotary3.performed += instance.OnRotary3;
            @Rotary3.canceled += instance.OnRotary3;
            @Rotary4.started += instance.OnRotary4;
            @Rotary4.performed += instance.OnRotary4;
            @Rotary4.canceled += instance.OnRotary4;
            @LeftPushButton1.started += instance.OnLeftPushButton1;
            @LeftPushButton1.performed += instance.OnLeftPushButton1;
            @LeftPushButton1.canceled += instance.OnLeftPushButton1;
            @LeftPushButton2.started += instance.OnLeftPushButton2;
            @LeftPushButton2.performed += instance.OnLeftPushButton2;
            @LeftPushButton2.canceled += instance.OnLeftPushButton2;
            @LeftPushButton3.started += instance.OnLeftPushButton3;
            @LeftPushButton3.performed += instance.OnLeftPushButton3;
            @LeftPushButton3.canceled += instance.OnLeftPushButton3;
            @LeftPushButton4.started += instance.OnLeftPushButton4;
            @LeftPushButton4.performed += instance.OnLeftPushButton4;
            @LeftPushButton4.canceled += instance.OnLeftPushButton4;
            @DownShift.started += instance.OnDownShift;
            @DownShift.performed += instance.OnDownShift;
            @DownShift.canceled += instance.OnDownShift;
            @UpShift.started += instance.OnUpShift;
            @UpShift.performed += instance.OnUpShift;
            @UpShift.canceled += instance.OnUpShift;
            @Joystick1Button1.started += instance.OnJoystick1Button1;
            @Joystick1Button1.performed += instance.OnJoystick1Button1;
            @Joystick1Button1.canceled += instance.OnJoystick1Button1;
            @Joystick1Button2.started += instance.OnJoystick1Button2;
            @Joystick1Button2.performed += instance.OnJoystick1Button2;
            @Joystick1Button2.canceled += instance.OnJoystick1Button2;
            @Joystick2Button1.started += instance.OnJoystick2Button1;
            @Joystick2Button1.performed += instance.OnJoystick2Button1;
            @Joystick2Button1.canceled += instance.OnJoystick2Button1;
            @Joystick2Button2.started += instance.OnJoystick2Button2;
            @Joystick2Button2.performed += instance.OnJoystick2Button2;
            @Joystick2Button2.canceled += instance.OnJoystick2Button2;
            @RightPushButton1.started += instance.OnRightPushButton1;
            @RightPushButton1.performed += instance.OnRightPushButton1;
            @RightPushButton1.canceled += instance.OnRightPushButton1;
            @RightPushButton2.started += instance.OnRightPushButton2;
            @RightPushButton2.performed += instance.OnRightPushButton2;
            @RightPushButton2.canceled += instance.OnRightPushButton2;
            @RightPushButton3.started += instance.OnRightPushButton3;
            @RightPushButton3.performed += instance.OnRightPushButton3;
            @RightPushButton3.canceled += instance.OnRightPushButton3;
            @RightPushButton4.started += instance.OnRightPushButton4;
            @RightPushButton4.performed += instance.OnRightPushButton4;
            @RightPushButton4.canceled += instance.OnRightPushButton4;
            @RightPushButton5.started += instance.OnRightPushButton5;
            @RightPushButton5.performed += instance.OnRightPushButton5;
            @RightPushButton5.canceled += instance.OnRightPushButton5;
            @RightPushButton6.started += instance.OnRightPushButton6;
            @RightPushButton6.performed += instance.OnRightPushButton6;
            @RightPushButton6.canceled += instance.OnRightPushButton6;
            @RightPushButton7.started += instance.OnRightPushButton7;
            @RightPushButton7.performed += instance.OnRightPushButton7;
            @RightPushButton7.canceled += instance.OnRightPushButton7;
            @RightPushButton8.started += instance.OnRightPushButton8;
            @RightPushButton8.performed += instance.OnRightPushButton8;
            @RightPushButton8.canceled += instance.OnRightPushButton8;
        }

        private void UnregisterCallbacks(IControlsActions instance)
        {
            @Joystick1.started -= instance.OnJoystick1;
            @Joystick1.performed -= instance.OnJoystick1;
            @Joystick1.canceled -= instance.OnJoystick1;
            @Joystick2.started -= instance.OnJoystick2;
            @Joystick2.performed -= instance.OnJoystick2;
            @Joystick2.canceled -= instance.OnJoystick2;
            @Rotary1.started -= instance.OnRotary1;
            @Rotary1.performed -= instance.OnRotary1;
            @Rotary1.canceled -= instance.OnRotary1;
            @Rotary2.started -= instance.OnRotary2;
            @Rotary2.performed -= instance.OnRotary2;
            @Rotary2.canceled -= instance.OnRotary2;
            @Rotary3.started -= instance.OnRotary3;
            @Rotary3.performed -= instance.OnRotary3;
            @Rotary3.canceled -= instance.OnRotary3;
            @Rotary4.started -= instance.OnRotary4;
            @Rotary4.performed -= instance.OnRotary4;
            @Rotary4.canceled -= instance.OnRotary4;
            @LeftPushButton1.started -= instance.OnLeftPushButton1;
            @LeftPushButton1.performed -= instance.OnLeftPushButton1;
            @LeftPushButton1.canceled -= instance.OnLeftPushButton1;
            @LeftPushButton2.started -= instance.OnLeftPushButton2;
            @LeftPushButton2.performed -= instance.OnLeftPushButton2;
            @LeftPushButton2.canceled -= instance.OnLeftPushButton2;
            @LeftPushButton3.started -= instance.OnLeftPushButton3;
            @LeftPushButton3.performed -= instance.OnLeftPushButton3;
            @LeftPushButton3.canceled -= instance.OnLeftPushButton3;
            @LeftPushButton4.started -= instance.OnLeftPushButton4;
            @LeftPushButton4.performed -= instance.OnLeftPushButton4;
            @LeftPushButton4.canceled -= instance.OnLeftPushButton4;
            @DownShift.started -= instance.OnDownShift;
            @DownShift.performed -= instance.OnDownShift;
            @DownShift.canceled -= instance.OnDownShift;
            @UpShift.started -= instance.OnUpShift;
            @UpShift.performed -= instance.OnUpShift;
            @UpShift.canceled -= instance.OnUpShift;
            @Joystick1Button1.started -= instance.OnJoystick1Button1;
            @Joystick1Button1.performed -= instance.OnJoystick1Button1;
            @Joystick1Button1.canceled -= instance.OnJoystick1Button1;
            @Joystick1Button2.started -= instance.OnJoystick1Button2;
            @Joystick1Button2.performed -= instance.OnJoystick1Button2;
            @Joystick1Button2.canceled -= instance.OnJoystick1Button2;
            @Joystick2Button1.started -= instance.OnJoystick2Button1;
            @Joystick2Button1.performed -= instance.OnJoystick2Button1;
            @Joystick2Button1.canceled -= instance.OnJoystick2Button1;
            @Joystick2Button2.started -= instance.OnJoystick2Button2;
            @Joystick2Button2.performed -= instance.OnJoystick2Button2;
            @Joystick2Button2.canceled -= instance.OnJoystick2Button2;
            @RightPushButton1.started -= instance.OnRightPushButton1;
            @RightPushButton1.performed -= instance.OnRightPushButton1;
            @RightPushButton1.canceled -= instance.OnRightPushButton1;
            @RightPushButton2.started -= instance.OnRightPushButton2;
            @RightPushButton2.performed -= instance.OnRightPushButton2;
            @RightPushButton2.canceled -= instance.OnRightPushButton2;
            @RightPushButton3.started -= instance.OnRightPushButton3;
            @RightPushButton3.performed -= instance.OnRightPushButton3;
            @RightPushButton3.canceled -= instance.OnRightPushButton3;
            @RightPushButton4.started -= instance.OnRightPushButton4;
            @RightPushButton4.performed -= instance.OnRightPushButton4;
            @RightPushButton4.canceled -= instance.OnRightPushButton4;
            @RightPushButton5.started -= instance.OnRightPushButton5;
            @RightPushButton5.performed -= instance.OnRightPushButton5;
            @RightPushButton5.canceled -= instance.OnRightPushButton5;
            @RightPushButton6.started -= instance.OnRightPushButton6;
            @RightPushButton6.performed -= instance.OnRightPushButton6;
            @RightPushButton6.canceled -= instance.OnRightPushButton6;
            @RightPushButton7.started -= instance.OnRightPushButton7;
            @RightPushButton7.performed -= instance.OnRightPushButton7;
            @RightPushButton7.canceled -= instance.OnRightPushButton7;
            @RightPushButton8.started -= instance.OnRightPushButton8;
            @RightPushButton8.performed -= instance.OnRightPushButton8;
            @RightPushButton8.canceled -= instance.OnRightPushButton8;
        }

        public void RemoveCallbacks(IControlsActions instance)
        {
            if (m_Wrapper.m_ControlsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IControlsActions instance)
        {
            foreach (var item in m_Wrapper.m_ControlsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_ControlsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public ControlsActions @Controls => new ControlsActions(this);

    // Discharger
    private readonly InputActionMap m_Discharger;
    private List<IDischargerActions> m_DischargerActionsCallbackInterfaces = new List<IDischargerActions>();
    private readonly InputAction m_Discharger_Joystick1;
    private readonly InputAction m_Discharger_Joystick2;
    public struct DischargerActions
    {
        private @ControllerSetup m_Wrapper;
        public DischargerActions(@ControllerSetup wrapper) { m_Wrapper = wrapper; }
        public InputAction @Joystick1 => m_Wrapper.m_Discharger_Joystick1;
        public InputAction @Joystick2 => m_Wrapper.m_Discharger_Joystick2;
        public InputActionMap Get() { return m_Wrapper.m_Discharger; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DischargerActions set) { return set.Get(); }
        public void AddCallbacks(IDischargerActions instance)
        {
            if (instance == null || m_Wrapper.m_DischargerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_DischargerActionsCallbackInterfaces.Add(instance);
            @Joystick1.started += instance.OnJoystick1;
            @Joystick1.performed += instance.OnJoystick1;
            @Joystick1.canceled += instance.OnJoystick1;
            @Joystick2.started += instance.OnJoystick2;
            @Joystick2.performed += instance.OnJoystick2;
            @Joystick2.canceled += instance.OnJoystick2;
        }

        private void UnregisterCallbacks(IDischargerActions instance)
        {
            @Joystick1.started -= instance.OnJoystick1;
            @Joystick1.performed -= instance.OnJoystick1;
            @Joystick1.canceled -= instance.OnJoystick1;
            @Joystick2.started -= instance.OnJoystick2;
            @Joystick2.performed -= instance.OnJoystick2;
            @Joystick2.canceled -= instance.OnJoystick2;
        }

        public void RemoveCallbacks(IDischargerActions instance)
        {
            if (m_Wrapper.m_DischargerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IDischargerActions instance)
        {
            foreach (var item in m_Wrapper.m_DischargerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_DischargerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public DischargerActions @Discharger => new DischargerActions(this);
    public interface IHoistActions
    {
        void OnCross(InputAction.CallbackContext context);
        void OnVertical(InputAction.CallbackContext context);
        void OnSwitcher(InputAction.CallbackContext context);
        void OnMalfunction(InputAction.CallbackContext context);
        void OnReset(InputAction.CallbackContext context);
    }
    public interface IControlsActions
    {
        void OnJoystick1(InputAction.CallbackContext context);
        void OnJoystick2(InputAction.CallbackContext context);
        void OnRotary1(InputAction.CallbackContext context);
        void OnRotary2(InputAction.CallbackContext context);
        void OnRotary3(InputAction.CallbackContext context);
        void OnRotary4(InputAction.CallbackContext context);
        void OnLeftPushButton1(InputAction.CallbackContext context);
        void OnLeftPushButton2(InputAction.CallbackContext context);
        void OnLeftPushButton3(InputAction.CallbackContext context);
        void OnLeftPushButton4(InputAction.CallbackContext context);
        void OnDownShift(InputAction.CallbackContext context);
        void OnUpShift(InputAction.CallbackContext context);
        void OnJoystick1Button1(InputAction.CallbackContext context);
        void OnJoystick1Button2(InputAction.CallbackContext context);
        void OnJoystick2Button1(InputAction.CallbackContext context);
        void OnJoystick2Button2(InputAction.CallbackContext context);
        void OnRightPushButton1(InputAction.CallbackContext context);
        void OnRightPushButton2(InputAction.CallbackContext context);
        void OnRightPushButton3(InputAction.CallbackContext context);
        void OnRightPushButton4(InputAction.CallbackContext context);
        void OnRightPushButton5(InputAction.CallbackContext context);
        void OnRightPushButton6(InputAction.CallbackContext context);
        void OnRightPushButton7(InputAction.CallbackContext context);
        void OnRightPushButton8(InputAction.CallbackContext context);
    }
    public interface IDischargerActions
    {
        void OnJoystick1(InputAction.CallbackContext context);
        void OnJoystick2(InputAction.CallbackContext context);
    }
}
